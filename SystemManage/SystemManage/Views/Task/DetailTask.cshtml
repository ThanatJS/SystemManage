@model SystemManage.Models.TaskModel
@using SystemManage.Models
@{
    if (Session["userID"] == null && Session["ProjectID"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
}
<!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
<script src="https://unpkg.com/gijgo@1.9.11/js/gijgo.min.js" type="text/javascript"></script>
<link href="https://unpkg.com/gijgo@1.9.11/css/gijgo.min.css" rel="stylesheet" type="text/css" />
<title>งาน</title>

<style>
    textarea.form-control {
        height: 150px;
        resize: none;
    }
</style>
@using (Html.BeginForm("EditTask", "Task", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="card shadow" style="margin-top: 50px;margin-bottom: 50px">
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label for="taskname">@Html.Label("*", new { @style = "color:red" }) ชื่องาน :</label>
                            @Html.HiddenFor(m => m.TaskID)
                            @{
                                if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                {

                                    @Html.TextBoxFor(m => m.TaskName, new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.TaskName, new { @class = "form-control", Readonly = "" })
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            <label for="comment">@Html.Label("*", new { @style = "color:red" }) รายละเอียดงาน :</label>
                            @{
                                if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                {

                                    @Html.TextAreaFor(m => m.DescriptionTask, new { @class = "form-control", @type = "TextArea", @style = "height:150px" })
                                }
                                else
                                {
                                    @Html.TextAreaFor(m => m.DescriptionTask, new { @class = "form-control", @type = "TextArea", Readonly = "" })
                                }
                            }

                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body shadow">
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label for="taskname">@Html.Label("*", new { @style = "color:red" }) ชื่องานรอง :</label>
                                    @Html.HiddenFor(m => m.SubTaskID)
                                    @{
                                        if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                        {

                                            @Html.TextBoxFor(m => m.SubTaskNames, new { @class = "form-control" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(m => m.SubTaskNames, new { @class = "form-control", Readonly = "" })
                                        }
                                    }
                                </div>
                            </div>
                            <div class="col-sm-1"></div>
                            <div class="col-sm-4">
                                <div class="input-group">

                                    <label class="label" for="level" style="margin-right: 10px">@Html.Label("*", new { @style = "color:red" }) ระดับ :</label>
                                    <div class="rs-select2 js-select-simple select--no-search " style="width: 100px">
                                        @{
                                            if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                            {

                                                @Html.DropDownListFor(m => m.level, new SelectList(Enum.GetValues(typeof(TaskModel.LevelTask))), "เลือก", new { @class = "form-control" })
                                            }
                                            else
                                            {
                                                @Html.DropDownListFor(m => m.level, new SelectList(Enum.GetValues(typeof(TaskModel.LevelTask))), "เลือก", new { @class = "form-control", disabled = "ture" })
                                            }
                                        }
                                        <div class="select-dropdown"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label for="comment">@Html.Label("*", new { @style = "color:red" }) รายละเอียดงานของผู้พัฒนาซอฟแวร์ :</label>
                                    @{
                                        if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                        {

                                            @Html.TextAreaFor(m => m.SubTasksDes, new { @class = "form-control", @type = "TextArea" })
                                        }
                                        else
                                        {
                                            @Html.TextAreaFor(m => m.SubTasksDes, new { @class = "form-control", @type = "TextArea", Readonly = "" })
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <label class="label" style="margin-right: 10px">@Html.Label("*", new { @style = "color:red" }) ผู้รับมอบหมาย :</label>

                                    @{
                                        if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                        {

                                            @Html.DropDownListFor(m => m.SubDevID, new SelectList(Model.DevList, "UserID", "Member_name"), "เลือก", new { @class = "form-control" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(m => m.SubDevID, new SelectList(Model.DevList, "UserID", "Member_name"), "เลือก", new { @class = "form-control", disabled = "ture" })
                                        }
                                    }
                                </div>
                                @{
                                    @Html.HiddenFor(m => m.AttachFile_Task)
                                    if (Model.CreateBy == Convert.ToInt32(Session["userID"]))
                                    {
                                        <div class="form-group" style="margin-top: 5px;margin-bottom:-5px;">
                                            <label class="label">ไฟล์แนบ :</label>
                                            @Html.TextBoxFor(m => m.AttachFile_Task, new { type = "file", @class = "form-control-file" })
                                            <a href='@Model.Show_Path_Sub' target="_blank">@Model.Show_FileName_Sub</a>
                                        </div>
                                    }
                                    else if (Model.Show_Path_Sub != null)
                                    {
                                        <div class="form-group" style="margin-top: 5px;margin-bottom:-5px;">
                                            <label class="label">ไฟล์แนบ :</label>
                                            <a href='@Model.Show_Path_Sub' target="_blank">@Model.Show_FileName_Sub</a>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group" style="margin-top: 5px;">
                                        </div>
                                    }
                                }

                            </div>
                            <div class="col-sm-4">
                                <div class="input-group">
                                    <label class="label" style="margin-right: 10px">@Html.Label("*", new { @style = "color:red" }) กำหนดส่ง:</label>
                                    @{
                                        if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                        {

                                            @Html.TextBoxFor(m => m.SubTaskDateSend, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(m => m.SubTaskDateSend, "{0:MM/dd/yyyy}", new { @class = "form-control", Readonly = "" })
                                        }
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="margin-top: 15px">
                    <div class="col-sm-12">
                        <div class="form-group">
                            @{
                                if (Model.CreateBy == Convert.ToInt32(Session["userID"]))
                                {
                                    <label for="comment">หมายเหตุผู้พัฒนาซอฟแวร์:</label>
                                    @Html.TextAreaFor(m => m.Comment_Dev, new { @Class = "form-control", Readonly = "" })
                                    <label for="comment">หมายเหตุผู้ทดสอบ:</label>
                                    @Html.TextAreaFor(m => m.Comment_Tester, new { @Class = "form-control", Readonly = "" })
                                    <label for="comment">หมายเหตุผู้ตรวจสอบ:</label>
                                    @Html.TextAreaFor(m => m.Comment_QA, new { @Class = "form-control", Readonly = "" })
                                    <label for="comment">หมายเหตุลูกค้า:</label>
                                    @Html.TextAreaFor(m => m.Comment_CM, new { @Class = "form-control", Readonly = "" })
                                }
                                else if (Model.Status == 0)
                                {
                                    if (Model.Handle == Convert.ToInt32(Session["userID"]))
                                    {
                                        <label for="comment">หมายเหตุผู้พัฒนาซอฟแวร์:</label>
                                        @Html.TextAreaFor(m => m.Comment_Dev, new { @Class = "form-control" })
                                    }
                                    else
                                    {
                                        <label for="comment">หมายเหตุผู้พัฒนาซอฟแวร์:</label>
                                        @Html.TextAreaFor(m => m.Comment_Dev, new { @Class = "form-control", Readonly = "" })
                                    }
                                }
                                else if (Model.Status == 1)
                                {
                                    if (Model.Handle == Convert.ToInt32(Session["userID"]))
                                    {
                                        <label for="comment">หมายเหตุผู้พัฒนาซอฟแวร์:</label>
                                        @Html.TextAreaFor(m => m.Comment_Dev, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุผู้ทดสอบ:</label>
                                        @Html.TextAreaFor(m => m.Comment_Tester, new { @Class = "form-control" })

                                    }
                                    else
                                    {
                                        <label for="comment">หมายเหตุผู้พัฒนาซอฟแวร์:</label>
                                        @Html.TextAreaFor(m => m.Comment_Dev, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุผู้ทดสอบ:</label>
                                        @Html.TextAreaFor(m => m.Comment_Tester, new { @Class = "form-control", Readonly = "" })
                                    }

                                }
                                else if (Model.Status == 2)
                                {
                                    if (Model.Handle == Convert.ToInt32(Session["userID"]))
                                    {
                                        <label for="comment">หมายเหตุผู้พัฒนาซอฟแวร์:</label>
                                        @Html.TextAreaFor(m => m.Comment_Dev, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุผู้ทดสอบ:</label>
                                        @Html.TextAreaFor(m => m.Comment_Tester, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุผู้ตรวจสอบ:</label>
                                        @Html.TextAreaFor(m => m.Comment_QA, new { @Class = "form-control" })

                                    }
                                    else
                                    {
                                        <label for="comment">หมายเหตุผู้พัฒนาซอฟแวร์:</label>
                                        @Html.TextAreaFor(m => m.Comment_Dev, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุผู้ทดสอบ:</label>
                                        @Html.TextAreaFor(m => m.Comment_Tester, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุผู้ตรวจสอบ:</label>
                                        @Html.TextAreaFor(m => m.Comment_QA, new { @Class = "form-control", Readonly = "" })
                                    }
                                }
                                else if (Model.Status == 3)
                                {
                                    if (Model.Handle == 0 && Model.TestID != Convert.ToInt32(Session["userID"]) && Model.QAID != Convert.ToInt32(Session["userID"]))
                                    {
                                        <label for="comment">หมายเหตุผู้พัฒนาซอฟแวร์:</label>
                                        @Html.TextAreaFor(m => m.Comment_Dev, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุผู้ทดสอบ:</label>
                                        @Html.TextAreaFor(m => m.Comment_Tester, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุผู้ตรวจสอบ:</label>
                                        @Html.TextAreaFor(m => m.Comment_QA, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุลูกค้า:</label>
                                        @Html.TextAreaFor(m => m.Comment_CM, new { @Class = "form-control", })

                                    }
                                    else
                                    {
                                        <label for="comment">หมายเหตุผู้พัฒนาซอฟแวร์:</label>
                                        @Html.TextAreaFor(m => m.Comment_Dev, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุผู้ทดสอบ:</label>
                                        @Html.TextAreaFor(m => m.Comment_Tester, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุผู้ตรวจสอบ:</label>
                                        @Html.TextAreaFor(m => m.Comment_QA, new { @Class = "form-control", Readonly = "" })
                                        <label for="comment">หมายเหตุลูกค้า:</label>
                                        @Html.TextAreaFor(m => m.Comment_CM, new { @Class = "form-control", Readonly = "" })
                                    }
                                }
                                else
                                {
                                    <label for="comment">หมายเหตุผู้พัฒนาซอฟแวร์:</label>
                                    @Html.TextAreaFor(m => m.Comment_Dev, new { @Class = "form-control", Readonly = "" })
                                    <label for="comment">หมายเหตุผู้ทดสอบ:</label>
                                    @Html.TextAreaFor(m => m.Comment_Tester, new { @Class = "form-control", Readonly = "" })
                                    <label for="comment">หมายเหตุผู้ตรวจสอบ:</label>
                                    @Html.TextAreaFor(m => m.Comment_QA, new { @Class = "form-control", Readonly = "" })
                                    <label for="comment">หมายเหตุลูกค้า:</label>
                                    @Html.TextAreaFor(m => m.Comment_CM, new { @Class = "form-control", Readonly = "" })
                                }
                            }
                        </div>
                    </div>
                </div>
                <div style="text-align: center;margin-top: 20px">
                </div>
                @if (Model.TestID == Convert.ToInt32(Session["userID"]) || Model.CreateBy == Convert.ToInt32(Session["userID"]))
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label for="comment">@Html.Label("*", new { @style = "color:red" }) รายละเอียดของผู้ทดสอบ :</label>
                                @if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                {
                                    @Html.TextAreaFor(m => m.DescriptionTest, new { @class = "form-control", @type = "TextArea" })
                                }
                                else
                                {
                                    @Html.TextAreaFor(m => m.DescriptionTest, new { @class = "form-control", @type = "TextArea", Readonly = "" })
                                }
                            </div>
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-sm-2"></div>
                    <div class="col-sm-8">
                        <div class="input-group">
                            <div class="col-sm-6">
                                <label class="label" style="margin-right: 10px">@Html.Label("*", new { @style = "color:red" }) ผู้ทดสอบ:</label>
                                @{
                                    if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                    {

                                        @Html.DropDownListFor(m => m.TestID, new SelectList(Model.TestList, "UserID", "Member_name"), "เลือก", new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(m => m.TestID, new SelectList(Model.TestList, "UserID", "Member_name"), "เลือก", new { @class = "form-control", disabled = "ture" })
                                    }
                                }
                            </div>
                            <div class="col-sm-6">
                                <label class="label" style="margin-right: 10px">@Html.Label("*", new { @style = "color:red" }) กำหนดส่ง:</label>

                                @{
                                    if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                    {

                                        @Html.TextBoxFor(m => m.TestSentDate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker3" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(m => m.TestSentDate, "{0:MM/dd/yyyy}", new { @class = "form-control", Readonly = "" })
                                    }
                                }

                            </div>
                        </div>
                    </div>
                    <div style="text-align: center;margin-top: 20px">
                    </div>
                </div>
                @if (Model.QAID == Convert.ToInt32(Session["userID"]) || Model.CreateBy == Convert.ToInt32(Session["userID"]))
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label for="comment">@Html.Label("*", new { @style = "color:red" }) รายละเอียดของผู้ตรวจสอบ :</label>
                                @if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                {
                                    @Html.TextAreaFor(m => m.DescriptionQA, new { @class = "form-control", @type = "TextArea" })
                                }
                                else
                                {
                                    @Html.TextAreaFor(m => m.DescriptionQA, new { @class = "form-control", @type = "TextArea", Readonly = "" })
                                }
                            </div>
                        </div>
                    </div>
                }
                <div class="col-sm-2"></div>
                <div class="row">
                    <div class="col-sm-2"></div>
                    <div class="col-sm-8">
                        <div class="input-group">
                            <div class="col-sm-6">
                                <label class="label" style="margin-right: 10px">@Html.Label("*", new { @style = "color:red" }) ผู้ตรวจงาน :</label>
                                @{
                                    if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                    {

                                        @Html.DropDownListFor(m => m.QAID, new SelectList(Model.QAList, "UserID", "Member_name"), "เลือก", new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(m => m.QAID, new SelectList(Model.QAList, "UserID", "Member_name"), "เลือก", new { @class = "form-control", disabled = "ture" })
                                    }
                                }
                            </div>
                            <div class="col-sm-6">
                                <label class="label" style="margin-right: 10px">@Html.Label("*", new { @style = "color:red" }) กำหนดส่ง :</label>

                                @{
                                    if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                                    {

                                        @Html.TextBoxFor(m => m.QASentDate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker2" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(m => m.QASentDate, "{0:MM/dd/yyyy}", new { @class = "form-control", Readonly = "" })
                                    }
                                }

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2"></div>
                </div>
                <div class="row" style="margin-top: 20px">
                    <div class="col-sm-10"></div>
                    <div class="col-sm-2">
                        @if (Model.Status != 4)
                        {
                            if (Model.CreateBy != Convert.ToInt32(Session["userID"]) && Model.SubDevID != Convert.ToInt32(Session["userID"]))
                            {
                                if (Model.Handle == Convert.ToInt32(Session["userID"]))
                                {
                                    <a href="@Url.Action("AddDefect", "Defect")"><button type="button" class="btn btn-warning btn-block">ข้อผิดพลาด</button></a>
                                }
                                else if (Model.Handle == 0 && Model.TestID != Convert.ToInt32(Session["userID"]) && Model.QAID != Convert.ToInt32(Session["userID"]))
                                {
                                    <a href="@Url.Action("AddDefect", "Defect")"><button type="button" class="btn btn-warning btn-block">ข้อผิดพลาด</button></a>
                                }
                            }
                            else if (Model.Status == 5)
                            {
                                if (Model.SubDevID == Convert.ToInt32(Session["userId"]))
                                {
                                    <a href="@Url.Action("Defect_Dev", "Defect" ,new { SubID=Model.SubTaskID})"><button type="button" class="btn btn-warning btn-block">ข้อผิดพลาด</button></a>
                                }
                            }
                        }
                    </div>
                </div>
                <div class="row" style="margin-top: 5px">
                    @{
                        @Html.HiddenFor(m => m.AttachFile)
                        if (Model.CreateBy == Convert.ToInt32(Session["userID"]))
                        {
                            <div class="col-sm-10">
                                <div class="form-group">
                                    <label class="label">ไฟล์แนบ :</label>
                                    @Html.TextBoxFor(m => m.AttachFile, new { type = "file", @class = "form-control-file" })
                                    <a href='@Model.Show_Path' target="_blank">@Model.Show_FileName</a>
                                </div>
                            </div>
                        }
                        else if (Model.Show_Path != null)
                        {
                            <div class="col-sm-10">
                                <div class="form-group">
                                    <label class="label">ไฟล์แนบ :</label>
                                    <a href='@Model.Show_Path' target="_blank">@Model.Show_FileName</a>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-sm-10">
                                <div class="form-group">
                                </div>
                            </div>
                        }
                    }
                    <div class="col-sm-2">
                        <a href="@Url.Action("ShowTask")"><button type="button" class="btn btn-outline-danger" onclick='return confirm("คุณต้องการยกเลิกการทำรายการใช่หรือไม่")'>กลับ</button></a>

                        @if (Model.Handle == Convert.ToInt32(Session["userID"]))
                        {
                            if (Model.Status != 4 && Model.HaveDefect != 1)
                            {
                                if (Convert.ToInt32(Session["Save"]) == 0)
                                {
                                    <button type="submit" class="btn btn-outline-success" onclick='return confirm("คุณต้องการบันทึกข้อมูลใช่หรือไม่")'>บันทึก</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-outline-success">บันทึก</button>
                                    <a href="@Url.Action("SendTask","Task",new {SubID=Model.SubTaskID })"><button type="button" class="btn btn-block btn-primary" style="margin-top:5px" onclick='return confirm("คุณต้องการส่งงานใช่หรือไม่")'>ส่งงาน</button></a>
                                }
                            }
                        }
                        else if (Model.CreateBy == Convert.ToInt32(Session["userID"]) && Model.Status == 0)
                        {
                            <button type="submit" class="btn btn-outline-primary" onclick='return confirm("คุณต้องการบันทึกข้อมูลใช่หรือไม่")'>บันทึก</button>
                        }
                        else if (Model.Handle == 0 && Model.TestID != Convert.ToInt32(Session["userID"]) && Model.QAID != Convert.ToInt32(Session["userID"]))
                        {
                            if (Convert.ToInt32(Session["Save"]) == 0)
                            {
                                <button type="submit" class="btn btn-outline-success" onclick='return confirm("คุณต้องการบันทึกข้อมูลใช่หรือไม่")'>บันทึก</button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-outline-success">บันทึก</button>
                                <a href="@Url.Action("SendTask","Task",new {SubID=Model.SubTaskID })"><button type="button" class="btn btn-block btn-primary" style="margin-top:5px" onclick='return confirm("คุณต้องการส่งงานใช่หรือไม่")'>ส่งงาน</button></a>
                            }
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>
}
<style>
    input, select, textarea {
        max-width: 2800px;
    }
</style>
<script>
    $('.datepicker').datepicker({
        uiLibrary: 'bootstrap4'
    });

    $('.datepicker2').datepicker({
        uiLibrary: 'bootstrap4'
    });

    $('.datepicker3').datepicker({
        uiLibrary: 'bootstrap4'
    });
</script>